<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="miaosha.mapper.StockMapper" >
    <resultMap id="BaseResultMap" type="miaosha.pojo.Stock" >
        <id column="id" property="id" jdbcType="VARCHAR" />
        <result column="name" property="name" jdbcType="VARCHAR" />
        <result column="count" property="count" jdbcType="INTEGER" />
        <result column="sale" property="sale" jdbcType="INTEGER" />
        <result column="version" property="version" jdbcType="INTEGER" />
    </resultMap>

    <sql id="table_name">stock</sql>

    <sql id="Base_Column_List" >
    id, name, count, sale, version
    </sql>

    <select id="getStockById" resultMap="BaseResultMap" parameterType="java.lang.Integer">
    select
    <include refid="Base_Column_List" />
    from
    <include refid="table_name" />
    where id = #{id,jdbcType=INTEGER}
    </select>

    <select id="getStockInfoForUpdate" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List" />
        from
        <include refid="table_name" />
        where id = #{id,jdbcType=INTEGER}
        FOR UPDATE
    </select>

    <update id="updateStockById" parameterType="Stock">
    update
    <include refid="table_name" />
    set sale = #{sale,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
    </update>

    <update id="updateByOptimistic" parameterType="Stock">
        update stock
        <set>
            sale = sale + 1,
            version = version + 1,
        </set>
        WHERE id = #{id,jdbcType=INTEGER}
        AND version = #{version,jdbcType=INTEGER}
    </update>
</mapper>